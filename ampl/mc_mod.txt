# ---------------------
# SETS
# ---------------------
set STOCKS;

# ---------------------
# PARAMETERS
# ---------------------
param N := card(STOCKS);
param q;                             # Number of stocks to select
param r{STOCKS, STOCKS};             # Correlation matrix
param x_input{STOCKS, STOCKS};       # 1 if j is most similar to i

# ---------------------
# VARIABLES
# ---------------------
var y{STOCKS} binary;                # y_j: selected or not
var x{STOCKS, STOCKS} binary;        # x_ij: is j most similar to i?

# ---------------------
# OBJECTIVE
# ---------------------
maximize total_similarity:
    sum {i in STOCKS, j in STOCKS} r[i,j] * x[i,j];

# ---------------------
# CONSTRAINTS
# ---------------------
subject to total_selected:
    sum {j in STOCKS} y[j] = q;

subject to one_similarity {i in STOCKS}:
    sum {j in STOCKS} x[i,j] = 1;

subject to link_x_y {i in STOCKS, j in STOCKS}:
    x[i,j] <= y[j];

